import{a as t,c as S,d as U,e as n}from"./chunk-NZYCSRIY.js";import{i as l,j as m}from"./chunk-3UOA546C.js";import{I as s,L as d,Q as p,a as h,ea as g,l as c,w as i,xb as f}from"./chunk-UNKFYFRK.js";var v=class u{userStorage=new S;messageService=p(U);userSignal=g(this.userStorage.user);http=p(m);user=this.userSignal.asReadonly();isAuthenticated=f(()=>this.user()!==void 0);logout(){this.userSignal.set(void 0),this.userStorage.user=void 0}requestLogin(r){return this.http.post(`${t}/user/login`,r).pipe(s(e=>{this.updateAndStoreUser(e),this.messageService.show("Authorization successful")}),i(e=>{throw this.messageService.show(n(e),"error"),e}))}requestUpdate(r,e){let o=this.user()?.accessToken;return this.http.patch(`${t}/user/${r}`,e,{headers:o?{Authorization:`Bearer ${o}`}:{}}).pipe(s(a=>{this.updateAndStoreUser(a),this.messageService.show("User update successful")}),i(a=>{throw this.messageService.show(n(a),"error"),a}))}requestNew(){return this.http.get(`${t}/user`).pipe(s(r=>{this.updateAndStoreUser(r),this.messageService.show(`Created new user: ${r.name}`)}),i(r=>{throw this.messageService.show(n(r),"error"),r}))}requestUser(){let r=this.user()?.accessToken;this.http.get(`${t}/user`,{headers:r?{Authorization:`Bearer ${r}`}:{}}).pipe(s(e=>this.updateAndStoreUser(e)),i(e=>{if(e instanceof l&&e.error?.error.includes("Token expired"))return console.log("Token expired. Refreshing..."),this.refreshTokens().pipe(s(()=>this.retryUserRequest()));throw e})).subscribe()}refreshTokens(){let r=this.user()?.refreshToken;if(!r){let e=new Error("No refresh token available");throw this.messageService.show(n(e),"error"),e}return this.http.post(`${t}/user/refresh`,{refreshToken:r}).pipe(s(e=>this.updateAndStoreUser(e)))}retryUserRequest(){let r=this.user()?.accessToken;this.http.get(`${t}/user`,{headers:r?{Authorization:`Bearer ${r}`}:{}}).pipe(s(e=>this.updateAndStoreUser(e)),i(e=>(console.error("Failed to fetch user after token refresh:",e),this.messageService.show("Failed to fetch user after token refresh","error"),c()))).subscribe()}updateAndStoreUser(r){let e=this.user(),o=e?h(h({},e),r):r;this.userSignal.set(o),this.userStorage.user=o}static \u0275fac=function(e){return new(e||u)};static \u0275prov=d({token:u,factory:u.\u0275fac,providedIn:"root"})};export{v as a};
